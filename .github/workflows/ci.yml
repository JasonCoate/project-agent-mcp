name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd mcp-server && npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run unit tests with coverage
      run: npm run test:coverage
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Run MCP server tests
      run: npm run test:mcp-server
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd mcp-server && npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Check TypeScript
      run: npm run type-check

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd mcp-server && npm ci
    
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        cd mcp-server && npm audit --audit-level=moderate
    
    - name: Run dependency check
      run: npm run deps:check

  build-docker:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t project-agent:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm -d --name test-container project-agent:latest
        sleep 10
        docker logs test-container
        docker stop test-container

  coverage-report:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd mcp-server && npm ci
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Generate coverage badge
      uses: tj-actions/coverage-badge-js@v1
      with:
        output: coverage-badge.svg
    
    - name: Commit coverage badge
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add coverage-badge.svg
        git diff --staged --quiet || git commit -m "Update coverage badge [skip ci]"
        git push